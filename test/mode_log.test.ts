import { cli } from '../src/app'
import { writeFileSync, mkdirSync } from 'fs'
import {
  cliArgs,
  dev_ttDir,
  ttFiles,
  stateFile,
  historyFile,
  defaultTask,
} from '../src/util'

const testDir = `${dev_ttDir}-mode_log.test`
const testState = `${testDir}/${stateFile}`
const testHistory = `${testDir}/${historyFile}`

beforeAll(() => {
  mkdirSync(testDir, { recursive: true })
  const testJSON = { autoGenerated: 0 }

  ttFiles.forEach(file => {
    writeFileSync(`${testDir}/${file}`, JSON.stringify(testJSON))
  })
})

describe('tt log', () => {
  test('tt log last, with history', () => {
    const mock = jest.fn((data, resolve) => {
      setTimeout(() => {
        data + 1
        resolve()
      }, 500)
    })
    const expected = expect.any(String)
    process.stdout.write = mock

    cli(cliArgs('new', 'study'), { ttRoot: testDir })
    cli(cliArgs('stop'), { ttRoot: testDir })
    cli(cliArgs('log', 'last'), { ttRoot: testDir })

    setTimeout(() => {
      expect(mock).toHaveBeenCalledWith(expected)
    }, 1000)
  })
})
